use winapi::shared::minwindef::DWORD;

#[derive(Debug, PartialEq, Eq)]
pub enum KeyCode {
    LeftMouseButton,
    RightMouseButton,
    MiddleMouseButton,
    Cancel,
    X1MouseButton,
    X2MouseButton,
    Backspace,
    Tab,
    Clear,
    Enter,
    Shift,
    Control,
    Alt,
    Pause,
    CapsLock,
    Escape,
    SpaceBar,
    PageUp,
    PageDown,
    End,
    Home,
    LeftArrow,
    UpArrow,
    RightArrow,
    DownArrow,
    Select,
    Print,
    Execute,
    PrintScreen,
    Insert,
    Delete,
    Help,
    Zero,
    One,
    Two,
    Three,
    Four,
    Five,
    Six,
    Seven,
    Eight,
    Nine,
    A,
    B,
    C,
    D,
    E,
    F,
    G,
    H,
    I,
    J,
    K,
    L,
    M,
    N,
    O,
    P,
    Q,
    R,
    S,
    T,
    U,
    V,
    W,
    X,
    Y,
    Z,
    LeftWindows,
    RightWindows,
    Applications,
    ComputerSleep,
    NumZero,
    NumOne,
    NumTwo,
    NumThree,
    NumFour,
    NumFive,
    NumSix,
    NumSeven,
    NumEight,
    NumNine,
    Multiply,
    Add,
    Separator,
    Subtract,
    Decimal,
    Divide,
    F1,
    F2,
    F3,
    F4,
    F5,
    F6,
    F7,
    F8,
    F9,
    F10,
    F11,
    F12,
    F13,
    F14,
    F15,
    F16,
    F17,
    F18,
    F19,
    F20,
    F21,
    F22,
    F23,
    F24,
    NumLock,
    ScrollLock,
    OemSpecific(DWORD),
    LeftShift,
    RightShift,
    LeftControl,
    RightControl,
    LeftMenu,
    RightMenu,
    BrowserBack,
    BrowserForward,
    BrowserRefresh,
    BrowserStop,
    BrowserSearch,
    BrowserFavorites,
    BrowserStartAndHome,
    VolumeMute,
    VolumeDown,
    VolumeUp,
    NextTrack,
    PreviousTrack,
    StopMedia,
    PlayPauseMedia,
    StartMail,
    SelectMedia,
    StartApp1,
    StartApp2,
    Oem1,
    OemPlus,
    OemComma,
    OemMinus,
    OemPeriod,
    Oem2,
    Oem3,
    Oem4,
    Oem5,
    Oem6,
    Oem7,
    Oem8,
    Oem102,
    Attn,
    CrSel,
    ExSel,
    EraseEOF,
    Play,
    Zoom,
    Pa1,
    OemClear,
    NotImplemented(DWORD),
    Undefined(DWORD),
    Unassigned(DWORD),
    Reserved(DWORD),
    Invalid(DWORD)
}

impl From<DWORD> for KeyCode {
    fn from(dword: DWORD) -> KeyCode {
        use KeyCode::*;
        match dword {
            0x01 => LeftMouseButton,
            0x02 => RightMouseButton,
            0x03 => Cancel,
            0x04 => MiddleMouseButton,
            0x05 => X1MouseButton,
            0x06 => X2MouseButton,
            0x07 => Undefined(dword),
            0x08 => Backspace,
            0x09 => Tab,
            0x0A..=0x0B => Reserved(dword),
            0x0C => Clear,
            0x0D => Enter,
            0x0E..=0x0F => Undefined(dword),
            0x10 => Shift,
            0x11 => Control,
            0x12 => Alt,
            0x13 => Pause,
            0x14 => CapsLock,
            0x15..=0x1A => NotImplemented(dword),
            0x1B => Escape,
            0x1C..=0x1F => NotImplemented(dword),
            0x20 => SpaceBar,
            0x21 => PageUp,
            0x22 => PageDown,
            0x23 => End,
            0x24 => Home,
            0x25 => LeftArrow,
            0x26 => UpArrow,
            0x27 => RightArrow,
            0x28 => DownArrow,
            0x29 => Select,
            0x2A => Print,
            0x2B => Execute,
            0x2C => PrintScreen,
            0x2D => Insert,
            0x2E => Delete,
            0x2F => Help,
            0x30 => Zero,
            0x31 => One,
            0x32 => Two,
            0x33 => Three,
            0x34 => Four,
            0x35 => Five,
            0x36 => Six,
            0x37 => Seven,
            0x38 => Eight,
            0x39 => Nine,
            0x3A..=0x40 => Undefined(dword),
            0x41 => A,
            0x42 => B,
            0x43 => C,
            0x44 => D,
            0x45 => E,
            0x46 => F,
            0x47 => G,
            0x48 => H,
            0x49 => I,
            0x4A => J,
            0x4B => K,
            0x4C => L,
            0x4D => M,
            0x4E => N,
            0x4F => O,
            0x50 => P,
            0x51 => Q,
            0x52 => R,
            0x53 => S,
            0x54 => T,
            0x55 => U,
            0x56 => V,
            0x57 => W,
            0x58 => X,
            0x59 => Y,
            0x5A => Z,
            0x5B => LeftWindows,
            0x5C => RightWindows,
            0x5D => Applications,
            0x5E => Reserved(dword),
            0x5F => ComputerSleep,
            0x60 => NumZero,
            0x61 => NumOne,
            0x62 => NumTwo,
            0x63 => NumThree,
            0x64 => NumFour,
            0x65 => NumFive,
            0x66 => NumSix,
            0x67 => NumSeven,
            0x68 => NumEight,
            0x69 => NumNine,
            0x6A => Multiply,
            0x6B => Add,
            0x6C => Separator,
            0x6D => Subtract,
            0x6E => Decimal,
            0x6F => Divide,
            0x70 => F1,
            0x71 => F2,
            0x72 => F3,
            0x73 => F4,
            0x74 => F5,
            0x75 => F6,
            0x76 => F7,
            0x77 => F8,
            0x78 => F9,
            0x79 => F10,
            0x7A => F11,
            0x7B => F12,
            0x7C => F13,
            0x7D => F14,
            0x7E => F15,
            0x7F => F16,
            0x80 => F17,
            0x81 => F18,
            0x82 => F19,
            0x83 => F20,
            0x84 => F21,
            0x85 => F22,
            0x86 => F23,
            0x87 => F24,
            0x88..=0x8F => Unassigned(dword),
            0x90 => NumLock,
            0x91 => ScrollLock,
            0x92..=0x96 => OemSpecific(dword),
            0x97..=0x9F => Unassigned(dword),
            0xA0 => LeftShift,
            0xA1 => RightShift,
            0xA2 => LeftControl,
            0xA3 => RightControl,
            0xA4 => LeftMenu,
            0xA5 => RightMenu,
            0xA6 => BrowserBack,
            0xA7 => BrowserForward,
            0xA8 => BrowserRefresh,
            0xA9 => BrowserStop,
            0xAA => BrowserSearch,
            0xAB => BrowserFavorites,
            0xAC => BrowserStartAndHome,
            0xAD => VolumeMute,
            0xAE => VolumeDown,
            0xAF => VolumeUp,
            0xB0 => NextTrack,
            0xB1 => PreviousTrack,
            0xB2 => StopMedia,
            0xB3 => PlayPauseMedia,
            0xB4 => StartMail,
            0xB5 => SelectMedia,
            0xB6 => StartApp1,
            0xB7 => StartApp2,
            0xB8..=0xB9 => Reserved(dword),
            0xBA => Oem1,
            0xBB => OemPlus,
            0xBC => OemComma,
            0xBD => OemMinus,
            0xBE => OemPeriod,
            0xBF => Oem2,
            0xC0 => Oem3,
            0xC1..=0xD7 => Reserved(dword),
            0xD8..=0xDA => Unassigned(dword),
            0xDB => Oem4,
            0xDC => Oem5,
            0xDD => Oem6,
            0xDE => Oem7,
            0xDF => Oem8,
            0xE0 => Reserved(dword),
            0xE1 => OemSpecific(dword),
            0xE2 => Oem102,
            0xE3..=0xE4 => OemSpecific(dword),
            0xE5 => NotImplemented(dword),
            0xE6 => OemSpecific(dword),
            0xE7 => NotImplemented(dword),
            0xE8 => Unassigned(dword),
            0xE9..=0xF5 => OemSpecific(dword),
            0xF6 => Attn,
            0xF7 => CrSel,
            0xF8 => ExSel,
            0xF9 => EraseEOF,
            0xFA => Play,
            0xFB => Zoom,
            0xFC => Reserved(dword),
            0xFD => Pa1,
            0xFE => OemClear,
            _ => Invalid(dword)
        }
    }
}

impl From<KeyCode> for DWORD {
    fn from(code: KeyCode) -> Self {
        use KeyCode::*;
        match code {
            LeftMouseButton => 0x01,
            RightMouseButton => 0x02,
            Cancel => 0x03,
            MiddleMouseButton => 0x04,
            X1MouseButton => 0x05,
            X2MouseButton => 0x06,
            Backspace => 0x08,
            Tab => 0x09,
            Clear => 0x0C,
            Enter => 0x0D,
            Shift => 0x10,
            Control => 0x11,
            Alt => 0x12,
            Pause => 0x13,
            CapsLock => 0x14,
            Escape => 0x1B,
            SpaceBar => 0x20,
            PageUp => 0x21,
            PageDown => 0x22,
            End => 0x23,
            Home => 0x24,
            LeftArrow => 0x25,
            UpArrow => 0x26,
            RightArrow => 0x27,
            DownArrow => 0x28,
            Select => 0x29,
            Print => 0x2A,
            Execute => 0x2B,
            PrintScreen => 0x2C,
            Insert => 0x2D,
            Delete => 0x2E,
            Help => 0x2F,
            Zero => 0x30,
            One => 0x31,
            Two => 0x32,
            Three => 0x33,
            Four => 0x34,
            Five => 0x35,
            Six => 0x36,
            Seven => 0x37,
            Eight => 0x38,
            Nine => 0x39,
            A => 0x41,
            B => 0x42,
            C => 0x43,
            D => 0x44,
            E => 0x45,
            F => 0x46,
            G => 0x47,
            H => 0x48,
            I => 0x49,
            J => 0x4A,
            K => 0x4B,
            L => 0x4C,
            M => 0x4D,
            N => 0x4E,
            O => 0x4F,
            P => 0x50,
            Q => 0x51,
            R => 0x52,
            S => 0x53,
            T => 0x54,
            U => 0x55,
            V => 0x56,
            W => 0x57,
            X => 0x58,
            Y => 0x59,
            Z => 0x5A,
            LeftWindows => 0x5B,
            RightWindows => 0x5C,
            Applications => 0x5D,
            ComputerSleep => 0x5F,
            NumZero => 0x60,
            NumOne => 0x61,
            NumTwo => 0x62,
            NumThree => 0x63,
            NumFour => 0x64,
            NumFive => 0x65,
            NumSix => 0x66,
            NumSeven => 0x67,
            NumEight => 0x68,
            NumNine => 0x69,
            Multiply => 0x6A,
            Add => 0x6B,
            Separator => 0x6C,
            Subtract => 0x6D,
            Decimal => 0x6E,
            Divide => 0x6F,
            F1 => 0x70,
            F2 => 0x71,
            F3 => 0x72,
            F4 => 0x73,
            F5 => 0x74,
            F6 => 0x75,
            F7 => 0x76,
            F8 => 0x77,
            F9 => 0x78,
            F10 => 0x79,
            F11 => 0x7A,
            F12 => 0x7B,
            F13 => 0x7C,
            F14 => 0x7D,
            F15 => 0x7E,
            F16 => 0x7F,
            F17 => 0x80,
            F18 => 0x81,
            F19 => 0x82,
            F20 => 0x83,
            F21 => 0x84,
            F22 => 0x85,
            F23 => 0x86,
            F24 => 0x87,
            NumLock => 0x90,
            ScrollLock => 0x91,
            OemSpecific(dword) => dword,
            LeftShift => 0xA0,
            RightShift => 0xA1,
            LeftControl => 0xA2,
            RightControl => 0xA3,
            LeftMenu => 0xA4,
            RightMenu => 0xA5,
            BrowserBack => 0xA6,
            BrowserForward => 0xA7,
            BrowserRefresh => 0xA8,
            BrowserStop => 0xA9,
            BrowserSearch => 0xAA,
            BrowserFavorites => 0xAB,
            BrowserStartAndHome => 0xAC,
            VolumeMute => 0xAD,
            VolumeDown => 0xAE,
            VolumeUp => 0xAF,
            NextTrack => 0xB0,
            PreviousTrack => 0xB1,
            StopMedia => 0xB2,
            PlayPauseMedia => 0xB3,
            StartMail => 0xB4,
            SelectMedia => 0xB5,
            StartApp1 => 0xB6,
            StartApp2 => 0xB7,
            Oem1 => 0xBA,
            OemPlus => 0xBB,
            OemComma => 0xBC,
            OemMinus => 0xBD,
            OemPeriod => 0xBE,
            Oem2 => 0xBF,
            Oem3 => 0xC0,
            Oem4 => 0xDB,
            Oem5 => 0xDC,
            Oem6 => 0xDD,
            Oem7 => 0xDE,
            Oem8 => 0xDF,
            Oem102 => 0xE2,
            Attn => 0xF6,
            CrSel => 0xF7,
            ExSel => 0xF8,
            EraseEOF => 0xF9,
            Play => 0xFA,
            Zoom => 0xFB,
            Pa1 => 0xFD,
            OemClear => 0xFE,
            NotImplemented(dword) => dword,
            Undefined(dword) => dword,
            Unassigned(dword) => dword,
            Reserved(dword) => dword,
            Invalid(dword) => dword
        }
    }
}

#[cfg(test)]
mod tests {
    use winapi::shared::minwindef::DWORD;
    use crate::keyboard::KeyCode;

    #[test]
    fn from_dword_works() {
        for dword in 0x00..0xFF {
            println!("Testing {}: {:?}", dword, KeyCode::from(dword));
            assert_eq!(DWORD::from(KeyCode::from(dword)), dword);
        }
    }
}
